const express = require('express');
const router = express.Router();
const User = require('../models/User');

// GET /api/users - ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get('/', async (req, res) => {
  try {
    console.log('üîç Fetching all users...');
    const users = await User.find({ isActive: true })
      .select('username displayName isOnline lastSeen membershipTier')
      .lean();

    console.log(`‚úÖ Found ${users.length} users`);

    res.json({
      success: true,
      data: {
        users,
        total: users.length,
        onlineCount: users.filter(u => u.isOnline).length
      }
    });

  } catch (error) {
    console.error('Error fetching users:', error);
    res.status(500).json({
      success: false,
      message: 'Failed to fetch users',
      error: error.message
    });
  }
});

// GET /api/users/online-count - ‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
router.get('/online-count', async (req, res) => {
  try {
    console.log('üîç Fetching total active users count across all chat rooms...');
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó (‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)
    const Message = require('../models/Message');
    const ChatRoom = require('../models/ChatRoom');
    const thirtyMinutesAgo = new Date(Date.now() - 30 * 60 * 1000);
    
    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 30 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    const activeUsers = await Message.distinct('sender', {
      createdAt: { $gte: thirtyMinutesAgo },
      isDeleted: { $ne: true }
    });
    
    const onlineCount = activeUsers.length;
    console.log(`‚úÖ Total active users across all chat rooms: ${onlineCount}`);

    res.json({
      success: true,
      data: {
        onlineCount,
        timestamp: new Date()
      }
    });

  } catch (error) {
    console.error('Error fetching online count:', error);
    res.status(500).json({
      success: false,
      message: 'Failed to fetch online count',
      error: error.message
    });
  }
});

module.exports = router;
