const mongoose = require('mongoose');
const User = require('../models/User');
const MembershipPlan = require('../models/MembershipPlan');

// Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö test tier ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function removeTestTier() {
  try {
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/sodeclick');

    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö test tier ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');

    // ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô test tier
    const testUsers = await User.find({ 'membership.tier': 'test' });
    console.log(`üìä ‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ test tier ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${testUsers.length} ‡∏Ñ‡∏ô`);

    if (testUsers.length > 0) {
      // ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô test tier
      const deleteResult = await User.deleteMany({ 'membership.tier': 'test' });
      console.log(`‚úÖ ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ test tier ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${deleteResult.deletedCount} ‡∏Ñ‡∏ô`);
    }

    // ‡∏•‡∏ö‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à test tier
    const testPlans = await MembershipPlan.find({ tier: 'test' });
    console.log(`üì¶ ‡∏û‡∏ö‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à test tier ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${testPlans.length} ‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à`);

    if (testPlans.length > 0) {
      const deletePlanResult = await MembershipPlan.deleteMany({ tier: 'test' });
      console.log(`‚úÖ ‡∏•‡∏ö‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à test tier ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${deletePlanResult.deletedCount} ‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à`);
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test tier ‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ
    const updateResult = await User.updateMany(
      { 'membership.tier': 'test' },
      { $unset: { 'membership.tier': 1 } }
    );

    if (updateResult.modifiedCount > 0) {
      console.log(`üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${updateResult.modifiedCount} ‡∏Ñ‡∏ô`);
    }

    console.log('üéâ ‡∏Å‡∏≤‡∏£‡∏•‡∏ö test tier ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö test tier:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
  }
}

// ‡∏£‡∏±‡∏ô script
if (require.main === module) {
  removeTestTier();
}

module.exports = { removeTestTier };
