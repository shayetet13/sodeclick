const mongoose = require('mongoose');
const ChatRoom = require('../models/ChatRoom');
const User = require('../models/User');
require('dotenv').config();

const createDefaultChatRooms = async () => {
  try {
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/sodeclick');
    console.log('‚úÖ Connected to MongoDB');

    // ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    await ChatRoom.deleteMany({});
    console.log('üóëÔ∏è  Cleared existing chat rooms');

    // ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á
    let owner = await User.findOne();
    if (!owner) {
      console.log('‚ùå No users found. Please create at least one user first.');
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞
    const publicRooms = [
      {
        name: 'üí¨ ‡πÅ‡∏ä‡∏ó‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
        description: '‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô ‡∏°‡∏≤‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏ö‡∏≤‡∏¢‡πÜ',
        type: 'public',
        owner: owner._id,
        settings: {
          maxMembers: 1000,
          allowGifts: true,
          allowCoinGifts: true
        }
      },
      {
        name: '‚ù§Ô∏è ‡∏´‡∏≤‡∏Ñ‡∏π‡πà ‡∏´‡∏≤‡πÅ‡∏ü‡∏ô',
        description: '‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≠‡∏á‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å',
        type: 'public',
        owner: owner._id,
        settings: {
          maxMembers: 500,
          allowGifts: true,
          allowCoinGifts: true
        }
      },
      {
        name: 'üéÆ ‡πÄ‡∏Å‡∏°‡∏™‡πå ‡πÅ‡∏•‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á',
        description: '‡∏Ñ‡∏∏‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏™‡πå ‡∏†‡∏≤‡∏û‡∏¢‡∏ô‡∏ï‡∏£‡πå ‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ',
        type: 'public',
        owner: owner._id,
        settings: {
          maxMembers: 300,
          allowGifts: true,
          allowCoinGifts: true
        }
      },
      {
        name: 'üçî ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞ ‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß',
        description: '‡πÅ‡∏ä‡∏£‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏£‡πà‡∏≠‡∏¢ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏™‡∏ß‡∏¢‡πÜ',
        type: 'public',
        owner: owner._id,
        settings: {
          maxMembers: 200,
          allowGifts: true,
          allowCoinGifts: true
        }
      }
    ];

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å Gold ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ)
    const privateRooms = [
      {
        name: 'üíé VIP Lounge',
        description: '‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å VIP ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô',
        type: 'private',
        owner: owner._id,
        entryFee: 100,
        ageRestriction: {
          minAge: 25,
          maxAge: 50
        },
        settings: {
          maxMembers: 50,
          allowGifts: true,
          allowCoinGifts: true,
          moderationEnabled: true
        }
      },
      {
        name: 'üåπ Romance Premium',
        description: '‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡πÇ‡∏£‡πÅ‡∏°‡∏ô‡∏ï‡∏¥‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°',
        type: 'private',
        owner: owner._id,
        entryFee: 50,
        ageRestriction: {
          minAge: 21,
          maxAge: 45
        },
        settings: {
          maxMembers: 100,
          allowGifts: true,
          allowCoinGifts: true,
          moderationEnabled: true
        }
      },
      {
        name: 'üíº Professional Network',
        description: '‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à',
        type: 'private',
        owner: owner._id,
        entryFee: 200,
        ageRestriction: {
          minAge: 25,
          maxAge: 60
        },
        settings: {
          maxMembers: 75,
          allowGifts: false,
          allowCoinGifts: false,
          moderationEnabled: true
        }
      }
    ];

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const allRooms = [...publicRooms, ...privateRooms];
    
    for (const roomData of allRooms) {
      const chatRoom = new ChatRoom(roomData);
      
      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏£‡∏Å
      chatRoom.addMember(owner._id, 'owner');
      
      await chatRoom.save();
      console.log(`‚úÖ Created ${roomData.type} room: ${roomData.name}`);
    }

    console.log(`üéâ Successfully created ${allRooms.length} chat rooms!`);
    console.log(`   - ${publicRooms.length} public rooms`);
    console.log(`   - ${privateRooms.length} private rooms`);

  } catch (error) {
    console.error('‚ùå Error creating default chat rooms:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Database connection closed');
  }
};

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ script
createDefaultChatRooms();