const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('../models/User');
require('dotenv').config();

async function updateKaoPassword() {
  try {
    console.log('üîå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB...');
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/love-app');
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ user kao
    const kao = await User.findOne({ username: 'kao' });
    if (!kao) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user kao');
      return;
    }

    console.log('üë§ ‡∏û‡∏ö user kao:', kao.username);
    console.log('üìß Email:', kao.email);
    console.log('üîí Role:', kao.role);
    console.log('');

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï password
    const hashedPassword = await bcrypt.hash('priktai', 12);
    kao.password = hashedPassword;
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SuperAdmin
    kao.role = 'superadmin';
    kao.coins = 999999;
    kao.votePoints = 999999;
    kao.membership = {
      tier: 'platinum',
      startDate: new Date(),
      endDate: null, // ‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
      autoRenew: false,
      planId: null
    };
    kao.isActive = true;
    kao.isBanned = false;
    
    await kao.save();
    
    console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SuperAdmin kao ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('üë§ Username: kao');
    console.log('üîë Password: priktai');
    console.log('üìß Email:', kao.email);
    console.log('üí∞ Coins: 999,999');
    console.log('‚≠ê Vote Points: 999,999');
    console.log('üíé Tier: Platinum');
    console.log('üîí Role: superadmin');
    console.log('');
    console.log('üöÄ ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ç‡∏≠‡∏á SuperAdmin:');
    console.log('   ‚Ä¢ ‡πÇ‡∏´‡∏ß‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏Ñ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î');
    console.log('   ‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÉ‡∏´‡πâ‡πÉ‡∏Ñ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î');
    console.log('   ‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏´‡∏ß‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏Ñ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î');
    console.log('   ‚Ä¢ ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
    console.log('   ‚Ä¢ ‡πÑ‡∏°‡πà‡πÇ‡∏î‡∏ô‡πÅ‡∏ö‡∏ô/‡∏•‡∏ö/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç tier');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB');
  }
}

// ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
updateKaoPassword();
