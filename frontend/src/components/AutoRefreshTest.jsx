import React, { useState, useEffect } from 'react';
import { Button } from './ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import autoRefreshManager from '../services/autoRefreshManager';

/**
 * Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Auto Refresh Manager
 */
const AutoRefreshTest = () => {
  const [stats, setStats] = useState(null);
  const [testRoomId] = useState('test-room-123');
  const [testUserId] = useState('test-user-123');
  const [isRunning, setIsRunning] = useState(false);

  useEffect(() => {
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï stats ‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    const interval = setInterval(() => {
      const currentStats = autoRefreshManager.getStats();
      setStats(currentStats);
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  const startTest = () => {
    console.log('üöÄ Starting auto refresh test...');
    setIsRunning(true);
    autoRefreshManager.startChatRefresh(testRoomId, testUserId);
  };

  const stopTest = () => {
    console.log('‚èπÔ∏è Stopping auto refresh test...');
    setIsRunning(false);
    autoRefreshManager.stopChatRefresh();
  };

  const forceRefresh = () => {
    console.log('üîÑ Force refreshing...');
    autoRefreshManager.forceRefresh('immediate');
  };

  const resetStats = () => {
    console.log('üìä Resetting stats...');
    autoRefreshManager.resetStats();
  };

  if (!stats) {
    return (
      <Card>
        <CardContent className="p-4">
          <div className="animate-pulse">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          üîß Auto Refresh Test
          <span className={`px-2 py-1 text-xs rounded ${isRunning ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`}>
            {isRunning ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô' : '‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô'}
          </span>
        </CardTitle>
        <CardDescription>
          ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö Auto Refresh Manager
        </CardDescription>
      </CardHeader>

      <CardContent className="space-y-4">
        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° */}
        <div className="flex gap-2">
          <Button
            onClick={startTest}
            disabled={isRunning}
            size="sm"
          >
            ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö
          </Button>
          <Button
            onClick={stopTest}
            disabled={!isRunning}
            variant="outline"
            size="sm"
          >
            ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö
          </Button>
          <Button
            onClick={forceRefresh}
            variant="outline"
            size="sm"
          >
            ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
          </Button>
          <Button
            onClick={resetStats}
            variant="outline"
            size="sm"
          >
            ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
          </Button>
        </div>

        {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô */}
        <div className="grid grid-cols-2 gap-4 text-sm">
          <div>
            <strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> {stats.isActive ? '‡∏ó‡∏≥‡∏á‡∏≤‡∏ô' : '‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô'}
          </div>
          <div>
            <strong>‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô:</strong> {stats.isVisible ? '‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•' : '‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà'}
          </div>
          <div>
            <strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> {stats.currentFrequency}
          </div>
          <div>
            <strong>Uptime:</strong> {stats.uptime} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          </div>
        </div>

        {/* ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä */}
        <div className="border-t pt-4">
          <h4 className="font-medium mb-2">üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä</h4>
          <div className="grid grid-cols-2 gap-2 text-sm">
            <div>
              <strong>‡∏£‡∏ß‡∏°:</strong> {stats.refreshStats.totalRefreshes}
            </div>
            <div>
              <strong>‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:</strong> {stats.refreshStats.successfulRefreshes}
            </div>
            <div>
              <strong>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:</strong> {stats.refreshStats.successRate}%
            </div>
            <div>
              <strong>‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</strong> {stats.lastActivity ? new Date(stats.lastActivity).toLocaleTimeString() : '‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢'}
            </div>
          </div>
        </div>

        {/* ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥ */}
        {stats.memoryUsage && (
          <div className="border-t pt-4">
            <h4 className="font-medium mb-2">üíæ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥</h4>
            <div className="text-sm">
              <strong>‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</strong> {stats.memoryUsage.used} MB / {stats.memoryUsage.total} MB
            </div>
          </div>
        )}

        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ */}
        {stats.networkInfo && (
          <div className="border-t pt-4">
            <h4 className="font-medium mb-2">üåê ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢</h4>
            <div className="grid grid-cols-2 gap-2 text-sm">
              <div>
                <strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> {stats.networkInfo.effectiveType?.toUpperCase()}
              </div>
              <div>
                <strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß:</strong> {stats.networkInfo.downlink} Mbps
              </div>
              <div>
                <strong>RTT:</strong> {stats.networkInfo.rtt} ms
              </div>
              <div>
                <strong>Save Data:</strong> {stats.networkInfo.saveData ? '‡πÄ‡∏õ‡∏¥‡∏î' : '‡∏õ‡∏¥‡∏î'}
              </div>
            </div>
          </div>
        )}

        {/* Active intervals */}
        <div className="border-t pt-4">
          <h4 className="font-medium mb-2">‚è±Ô∏è Active Intervals</h4>
          <div className="text-sm">
            <strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô:</strong> {stats.activeIntervals}
          </div>
        </div>

        {/* Service Worker */}
        <div className="border-t pt-4">
          <h4 className="font-medium mb-2">ü§ñ Service Worker</h4>
          <div className="text-sm">
            <strong>‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö:</strong> {stats.serviceWorkerSupported ? '‡πÉ‡∏ä‡πà' : '‡πÑ‡∏°‡πà'}
            <br />
            <strong>‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:</strong> {stats.serviceWorkerActive ? '‡πÉ‡∏ä‡πà' : '‡πÑ‡∏°‡πà'}
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default AutoRefreshTest;
